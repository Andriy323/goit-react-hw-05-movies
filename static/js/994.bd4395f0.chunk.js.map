{"version":3,"file":"static/js/994.bd4395f0.chunk.js","mappings":"uQAwBA,EAtBmB,SAAC,GAAwB,IAAtBA,EAAqB,EAArBA,eACpB,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAUA,OACE,0BACE,kBAAMC,SAPO,SAAAC,GACfA,EAAEC,iBACFN,EAAeE,GACfC,EAAS,GACV,EAGG,WACE,kBAAOI,QAAQ,MACf,kBAAOC,KAAK,OAAOC,SAZJ,SAAAJ,GACnBF,EAASE,EAAEK,OAAOC,MACnB,EAUgDA,MAAOT,KAClD,2CAIP,E,SC2BD,EA5Ce,WAEb,OAA0BD,EAAAA,EAAAA,UAAS,IAAnC,eAAOW,EAAP,KAAcC,EAAd,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAASF,EAAaG,IAAI,UAChCC,QAAQC,IAAIH,EAAQ,SACtB,IAAMI,GAAWC,EAAAA,EAAAA,OACfC,EAAAA,EAAAA,YAAU,WACR,GAAKN,EAAL,CAGA,IAAMO,EAAW,mCAAG,gHAEUC,EAAAA,EAAAA,IAAeR,GAFzB,gBAERS,EAFQ,EAERA,QACRb,GAAS,OAAIa,IACbP,QAAQC,IAAIM,GAJI,gDAMhBP,QAAQC,IAAR,MANgB,yDAAH,qDASjBI,GAVC,CAWF,GAAE,CAACP,IAEJ,IAIMU,EAAOf,EAAMgB,KAAI,WAAaC,GAAb,IAAEC,EAAF,EAAEA,GAAGC,EAAL,EAAKA,MAAL,OACzB,yBACI,SAAC,KAAD,CAAM7B,MAAO,CAAC8B,KAAKX,GAAWY,GAAE,kBAAaH,GAA7C,SAAoDC,KAD/CF,EADgB,IAKvB,OACE,4BACA,SAAC,EAAD,CAAY7B,eAXS,SAAAkC,GACrBf,QAAQC,IAAIc,EAAO,UACnBlB,EAAgB,CAAEC,OAAQiB,GAC3B,KASH,wBACKP,MAMJ,C,sLC3CKQ,E,OAAWC,EAAAA,OAAa,CAC5BC,QAAS,gCACTC,OAAQ,CACNC,QAL0BC,sCASjBC,EAAgB,mCAAG,WAAMC,GAAN,yFACPP,EAASjB,IAAI,uBADN,uBACtByB,EADsB,EACtBA,KADsB,kBAEvBA,GAFuB,2CAAH,sDAKhBC,EAAU,mCAAG,WAAMd,GAAN,yFACDK,EAASjB,IAAT,iBAAuBY,IADtB,uBAChBa,EADgB,EAChBA,KADgB,kBAEjBA,GAFiB,2CAAH,sDAKVlB,EAAc,mCAAG,WAAOS,GAAP,8FAAcQ,EAAd,+BAAqB,EAArB,SACLP,EAASjB,IAAT,gBAA8B,CACnDoB,OAAQ,CACNJ,MAAAA,EACAQ,KAAAA,KAJwB,uBACpBC,EADoB,EACpBA,KADoB,kBAOrBA,GAPqB,2CAAH,sDAUdE,EAAe,mCAAG,WAAMf,GAAN,yFACNK,EAASjB,IAAT,iBAAuBY,EAAvB,aADM,uBACrBa,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAH,sDAKfG,EAAe,mCAAG,WAAMhB,GAAN,yFACNK,EAASjB,IAAT,iBAAuBY,EAAvB,aADM,uBACrBa,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAH,qD","sources":["components/formSearch/FormSearch.jsx","components/page/MoviesPage/Movies.jsx","components/shared/shared.js"],"sourcesContent":["import { useState } from 'react';\nimport PropTypes from 'prop-types';\nconst FormSearch = ({ onHangleSubmit }) => {\n  const [state, setState] = useState('');\n\n  const hangleChange = e => {\n    setState(e.target.value);\n  };\n  const onSubmit = e => {\n    e.preventDefault();\n    onHangleSubmit(state);\n    setState('');\n  };\n  return (\n    <div>\n      <form onSubmit={onSubmit}>\n        <label htmlFor=\"\"></label>\n        <input type=\"text\" onChange={hangleChange} value={state} />\n        <button>Search</button>\n      </form>\n    </div>\n  );\n};\n\nexport default FormSearch;\n\nFormSearch.propTypes ={\n  onHangleSubmit: PropTypes.func.isRequired,\n\n}","import { useSearchParams, useLocation } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport FormSearch from 'components/formSearch/FormSearch';\nimport { getFilmsSearch } from 'components/shared/shared';\nimport { Link } from 'react-router-dom';\nconst Movies = () => {\n  //   const [search, setSearch] = useState('');\n  const [items, setItems] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const search = searchParams.get('search');\n  console.log(search, 'namee');\nconst location = useLocation()\n  useEffect(() => {\n    if (!search) {\n      return;\n    }\n    const fetchSearch = async () => {\n      try {\n        const { results } = await getFilmsSearch(search);\n        setItems([...results]);\n        console.log(results);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchSearch();\n  }, [search]);\n\n  const onHangleSubmit = query => {\n    console.log(query, 'father');\n    setSearchParams({ search: query });\n  };\n  const link = items.map(({id,title}, index) => (\n<li key={index}>\n    <Link state={{from:location}} to={`/movies/${id}`}>{title}</Link>\n</li>\n  ))\n  return(\n    <div>\n    <FormSearch onHangleSubmit={onHangleSubmit} />\n<ul>\n    {link}\n</ul>\n    </div>\n    \n  )\n  \n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst { REACT_APP_API_KEY } = process.env;\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: {\n    api_key: REACT_APP_API_KEY,\n  },\n});\n\nexport const getTraidingFilms = async page => {\n  const { data } = await instance.get('/trending/movie/day');\n  return data;\n};\n\nexport const getFilmsId = async id => {\n  const { data } = await instance.get(`/movie/${id}`);\n  return data;\n};\n\nexport const getFilmsSearch = async (query, page = 1) => {\n  const { data } = await instance.get(`/search/movie`, {\n    params: {\n      query,\n      page,\n    },\n  });\n  return data;\n};\n\nexport const getFilmsCredits = async id => {\n  const { data } = await instance.get(`/movie/${id}/credits`);\n  return data;\n};\n\nexport const getFilmsReviews = async id => {\n  const { data } = await instance.get(`/movie/${id}/reviews`);\n  return data;\n};\n"],"names":["onHangleSubmit","useState","state","setState","onSubmit","e","preventDefault","htmlFor","type","onChange","target","value","items","setItems","useSearchParams","searchParams","setSearchParams","search","get","console","log","location","useLocation","useEffect","fetchSearch","getFilmsSearch","results","link","map","index","id","title","from","to","query","instance","axios","baseURL","params","api_key","process","getTraidingFilms","page","data","getFilmsId","getFilmsCredits","getFilmsReviews"],"sourceRoot":""}