{"version":3,"file":"static/js/92.10aac425.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/components/RenderFilms/render-flms.module.css?b9ac","components/RenderFilms/RenderFilms.jsx","components/page/HomePage/Home.jsx","components/shared/shared.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"render-flms_list__wYqK8\",\"items\":\"render-flms_items__J5xGQ\",\"link\":\"render-flms_link__IjNs3\",\"imgContainer\":\"render-flms_imgContainer__VK2Wy\",\"image\":\"render-flms_image__I969H\",\"maskOne\":\"render-flms_maskOne__kMvb7\",\"maskOneFrame\":\"render-flms_maskOneFrame__QjevC\",\"title\":\"render-flms_title__ANpIN\",\"pretitle\":\"render-flms_pretitle__yQLdj\"};","import { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport notImage from '../image/notImage.jpg';\nimport css from './render-flms.module.css';\nconst RenderFilms = ({ items, location }) => {\n  const item = items.map(\n    ({ id, title, poster_path, adult, release_date }, index) => {\n      const urlImage = poster_path\n        ? `https://image.tmdb.org/t/p/w200/${poster_path}`\n        : notImage;\n      return (\n        <li key={index} className={css.items}>\n          <Link\n            state={{ from: location }}\n            className={css.link}\n            to={`/movies/${id}`}\n          >\n            <div\n              className={\n                css.imgContainer + ' ' + css.maskOne + ' ' + css.maskOneFrame\n              }\n            >\n              <img className={css.image} src={urlImage} alt={title} />\n            </div>\n\n            <div>\n              <h1 className={css.title}>{title}</h1>\n              {adult && <p className={css.pretitle}>+18</p>}\n              <p className={css.pretitle}>{release_date}</p>\n            </div>\n          </Link>\n        </li>\n      );\n    }\n  );\n  return (\n    <div className={css.container}>\n      <ul className={css.list}>{item}</ul>\n    </div>\n  );\n};\n\nexport default RenderFilms;\n\nRenderFilms.propTypes = {\n  items: PropTypes.array.isRequired,\n  location: PropTypes.object.isRequired,\n};\nRenderFilms.defaultProps = {\n  items: [],\n};\n","import { getTraidingFilms } from 'components/shared/shared';\nimport { useEffect, useState } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { useLocation } from 'react-router-dom';\nimport RenderFilms from 'components/RenderFilms/RenderFilms';\nimport Loader from 'components/shared/Loader/Loader';\nconst Home = () => {\n  const [state, setState] = useState({\n    error: null,\n    films: [],\n    loader: false,\n  });\n\n  const location = useLocation();\n  useEffect(() => {\n    const fetchTraidingFilms = async () => {\n      try {\n        setState(prevState => ({ ...prevState, loader: true }));\n\n        const { results } = await getTraidingFilms();\n        setState(prevState => {\n          return { ...prevState, films: [...prevState.films, ...results] };\n        });\n      } catch (error) {\n        toast.error(\n          ` An error occurred. Go to the main page or repeat the request.`\n        );\n      } finally {\n        setState(prevState => ({ ...prevState, loader: false }));\n      }\n    };\n    fetchTraidingFilms();\n  }, []);\n  return (\n    <>\n      {state.loader && <Loader />}\n      <ToastContainer />\n      <RenderFilms items={state.films} location={location} />\n    </>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\nconst { REACT_APP_API_KEY } = process.env;\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: {\n    api_key: REACT_APP_API_KEY,\n  },\n});\n\nexport const getTraidingFilms = async page => {\n  const { data } = await instance.get('/trending/movie/day', {\n    params:{\n      language: 'uk-UA'\n    }\n  });\n  return data;\n};\n\n\n\nexport const getFilmsSearch = async (query, page = 1) => {\n  const { data } = await instance.get(`/search/movie`, {\n    params: {\n      language: \"uk-UA\",\n      query,\n      page,\n    },\n  });\n\n  return data;\n};\n\nexport const getFilmsCredits = async id => {\n  const { data } = await instance.get(`/movie/${id}/credits`);\n  return data;\n};\n\nexport const getFilmsReviews = async id => {\n  const { data } = await instance.get(`/movie/${id}/reviews`);\n  return data;\n};\n\nconst getLang = async (id, lang, subUrl='') => {\n  const { data } = await instance.get(`/movie/${id}${subUrl}`, {\n    params: { language: lang, },\n  });\n\n  return data;\n};\n\nexport const getTrailerKey = async id => {\n  const ua = getLang(id, 'uk-UA', '/videos');\n  const ru = getLang(id, 'ru-Ru', '/videos');\n  const en = getLang(id, 'en-US', '/videos');\n  const promisTrailer = Promise.all([ua, ru, en])\n    .then(value => {\n      const data = value.find(({ results }) => results.length > 0);\n      return data ? data.results[0].key : '';\n    })\n    .catch(error => console.log(error, 'error'));\n\n  return promisTrailer;\n};\n\n\n// export const getFilmsId = async (id, lang = 'en-US') => {\n//   const { data } = await instance.get(`/movie/${id}`, {\n//     params: { language: lang },\n//   });\n\n//   return data;\n// };\n\nexport const getFilmDetails = async id => {\n  const uk = getLang(id, 'uk-UA');\n  const ru = getLang(id, 'ru-Ru');\n  const en = getLang(id, 'en-US');\n\n  const data = Promise.all([uk, ru, en])\n    .then(value => {\n      const valueLang = value.find(item => item.overview);\n      return valueLang;\n    })\n    .catch(error => console.log(error));\n  return data;\n};"],"names":["RenderFilms","items","location","item","map","index","id","title","poster_path","adult","release_date","urlImage","notImage","className","css","state","from","to","src","alt","defaultProps","useState","error","films","loader","setState","useLocation","useEffect","fetchTraidingFilms","prevState","getTraidingFilms","results","toast","instance","axios","baseURL","params","api_key","process","page","get","language","data","getFilmsSearch","query","getFilmsCredits","getFilmsReviews","getLang","lang","subUrl","getTrailerKey","ua","ru","en","promisTrailer","Promise","all","then","value","find","length","key","catch","console","log","getFilmDetails","uk","overview"],"sourceRoot":""}