{"version":3,"file":"static/js/875.84100df1.chunk.js","mappings":"kOAwCA,UArCa,WACX,OAA0BA,EAAAA,EAAAA,UAAS,CACjCC,KAAM,GACNC,QAAQ,EACRC,MAAO,OAHT,eAAOC,EAAP,KAAcC,EAAd,KAMQC,GAAYC,EAAAA,EAAAA,MAAZD,SACRE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAc,mCAAG,gHAEIC,EAAAA,EAAAA,IAAgBJ,GAFpB,gBAEXK,EAFW,EAEXA,KACRN,GAAS,SAAAO,GACP,MAAO,CAAEA,UAAAA,EAAWX,MAAK,OAAKU,GAC/B,IALkB,gDAOnBE,QAAQC,IAAR,MAPmB,yDAAH,qDAUpBL,GACD,GAAE,CAACH,IACJ,IAAMS,EAAQX,EAAMH,KAAKe,KAAI,WAAoCC,GAApC,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,UAAWC,EAApB,EAAoBA,aAApB,OAC3B,2BACE,gBAAKC,IAAG,0CAAqCD,GAAgBE,IAAKJ,KAClE,kCAAUA,MACV,uCAAeC,OAHRF,EADkB,IAO7B,OACE,0BACE,wBACCF,KAIN,C,sLClCKQ,E,OAAWC,EAAAA,OAAa,CAC5BC,QAAS,gCACTC,OAAQ,CACNC,QAL0BC,sCASjBC,EAAgB,mCAAG,WAAMC,GAAN,yFACPP,EAASQ,IAAI,uBADN,uBACtBC,EADsB,EACtBA,KADsB,kBAEvBA,GAFuB,2CAAH,sDAKhBC,EAAU,mCAAG,WAAMC,GAAN,yFACDX,EAASQ,IAAT,iBAAuBG,IADtB,uBAChBF,EADgB,EAChBA,KADgB,kBAEjBA,GAFiB,2CAAH,sDAKVG,EAAc,mCAAG,WAAOC,GAAP,8FAAcN,EAAd,+BAAqB,EAArB,SACLP,EAASQ,IAAT,gBAA8B,CACnDL,OAAQ,CACNU,MAAAA,EACAN,KAAAA,KAJwB,uBACpBE,EADoB,EACpBA,KADoB,kBAOrBA,GAPqB,2CAAH,sDAUdtB,EAAe,mCAAG,WAAMwB,GAAN,yFACNX,EAASQ,IAAT,iBAAuBG,EAAvB,aADM,uBACrBF,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAH,sDAKfK,EAAe,mCAAG,WAAMH,GAAN,yFACNX,EAASQ,IAAT,iBAAuBG,EAAvB,aADM,uBACrBF,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAH,qD","sources":["components/page/CastPage/Cast.jsx","components/shared/shared.js"],"sourcesContent":["import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { getFilmsCredits } from 'components/shared/shared';\nconst Cast = () => {\n  const [state, setState] = useState({\n    item: [],\n    loader: false,\n    error: null,\n  });\n\n  const { movieId } = useParams();\n  useEffect(() => {\n    const fetchFilmsCast = async () => {\n      try {\n        const { cast } = await getFilmsCredits(movieId);\n        setState(prevState => {\n          return { prevState, item: [...cast] };\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchFilmsCast();\n  }, [movieId]);\n  const items = state.item.map(({ name, character, profile_path }, index) => (\n    <li key={index}>\n      <img src={`https://image.tmdb.org/t/p/w200/${profile_path}`} alt={name} />\n      <p>Name: {name}</p>\n      <p>Character: {character}</p>\n    </li>\n  ));\n  return (\n    <div>\n      <ul>\n      {items}\n      </ul>\n    </div>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\nconst { REACT_APP_API_KEY } = process.env;\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: {\n    api_key: REACT_APP_API_KEY,\n  },\n});\n\nexport const getTraidingFilms = async page => {\n  const { data } = await instance.get('/trending/movie/day');\n  return data;\n};\n\nexport const getFilmsId = async id => {\n  const { data } = await instance.get(`/movie/${id}`);\n  return data;\n};\n\nexport const getFilmsSearch = async (query, page = 1) => {\n  const { data } = await instance.get(`/search/movie`, {\n    params: {\n      query,\n      page,\n    },\n  });\n  return data;\n};\n\nexport const getFilmsCredits = async id => {\n  const { data } = await instance.get(`/movie/${id}/credits`);\n  return data;\n};\n\nexport const getFilmsReviews = async id => {\n  const { data } = await instance.get(`/movie/${id}/reviews`);\n  return data;\n};\n"],"names":["useState","item","loader","error","state","setState","movieId","useParams","useEffect","fetchFilmsCast","getFilmsCredits","cast","prevState","console","log","items","map","index","name","character","profile_path","src","alt","instance","axios","baseURL","params","api_key","process","getTraidingFilms","page","get","data","getFilmsId","id","getFilmsSearch","query","getFilmsReviews"],"sourceRoot":""}