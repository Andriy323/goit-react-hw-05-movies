{"version":3,"file":"static/js/773.7646ae8b.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/components/page/CastPage/cast.module.css?806b","components/page/CastPage/Cast.jsx","components/shared/shared.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"cast_list__-re0Y\",\"ani\":\"cast_ani__X8+Mc\",\"item\":\"cast_item__hhrDs\",\"pretitle\":\"cast_pretitle__cVtSG\",\"image\":\"cast_image__bQqUU\"};","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { getFilmsCredits } from 'components/shared/shared';\nimport notImage from '../../image/noavatar.png';\nimport css from './cast.module.css';\nimport Loader from 'components/shared/Loader/Loader';\nconst Cast = () => {\n  const [state, setState] = useState({\n    item: [],\n    loader: false,\n  });\n  const [scrol, setScrol] = useState(false);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    if (scrol) {\n      const toScroll = document.getElementById('cast');\n      if (toScroll) {\n        toScroll.scrollIntoView({ block: 'start', behavior: 'smooth' });\n      }\n    }\n  }, [scrol]);\n\n  useEffect(() => {\n    const fetchFilmsCast = async () => {\n      try {\n        setState(prev => ({ ...prev, loader: true }));\n        const { cast } = await getFilmsCredits(movieId);\n        setState(prevState => {\n          return { prevState, item: [...cast] };\n        });\n        if (!cast.length) {\n          toast.warning(`\nNo credits!`);\n        } else {\n          setScrol(true);\n        }\n      } catch (error) {\n        toast.error(\n          ` An error occurred. Go to the main page or repeat the request.`\n        );\n      } finally {\n        setState(prev => ({ ...prev, loader: false }));\n      }\n    };\n\n    fetchFilmsCast();\n  }, [movieId]);\n  const items = state.item.map(({ name, character, profile_path }, index) => {\n    const urlImage = profile_path\n      ? `https://image.tmdb.org/t/p/w200/${profile_path}`\n      : notImage;\n    return (\n      <li key={index} className={css.item}>\n        <img src={urlImage} alt={name} width=\"120\" className={css.image} />\n        <p className={css.pretitle}>Name: {name}</p>\n        <p className={css.pretitle}>Character: {character}</p>\n      </li>\n    );\n  });\n  return (\n    <div id=\"cast\">\n      {state.loader && <Loader />}\n      <ToastContainer />\n      <ul className={css.list}>{items}</ul>\n    </div>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\nconst { REACT_APP_API_KEY } = process.env;\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: {\n    api_key: REACT_APP_API_KEY,\n  },\n});\n\nexport const getTraidingFilms = async page => {\n  const { data } = await instance.get('/trending/movie/day');\n  return data;\n};\n\nexport const getFilmsId = async id => {\n  const { data } = await instance.get(`/movie/${id}`);\n  return data;\n};\n\nexport const getFilmsSearch = async (query, page = 1) => {\n  const { data } = await instance.get(`/search/movie`, {\n    params: {\n      query,\n      page,\n    },\n  });\n\n  return data;\n};\n\nexport const getFilmsCredits = async id => {\n  const { data } = await instance.get(`/movie/${id}/credits`);\n  return data;\n};\n\nexport const getFilmsReviews = async id => {\n  const { data } = await instance.get(`/movie/${id}/reviews`);\n  return data;\n};\n\nconst getTrailerLang = async (id, lang) => {\n  const { data } = await instance.get(`/movie/${id}/videos`, {\n    params: { language: lang },\n  });\n\n  return data;\n};\n\nexport const getTrailerKey = async id => {\n  const lang = ['uk-UA', 'ru-Ru', 'en-US'];\n  let keyTrailer = '';\n  \n  for (let i = 0; i < lang.length; i++) {\n    const { results } = await getTrailerLang(id, lang[i]);\n    if (results.length) {\n      keyTrailer = results[0].key;\n      break;\n    }\n  }\n  return keyTrailer;\n};\n"],"names":["useState","item","loader","state","setState","scrol","setScrol","movieId","useParams","useEffect","toScroll","document","getElementById","scrollIntoView","block","behavior","fetchFilmsCast","prev","getFilmsCredits","cast","prevState","length","toast","items","map","index","name","character","profile_path","urlImage","notImage","className","css","src","alt","width","id","Loader","instance","axios","baseURL","params","api_key","process","getTraidingFilms","page","get","data","getFilmsId","getFilmsSearch","query","getFilmsReviews","getTrailerLang","lang","language","getTrailerKey","keyTrailer","i","results","key"],"sourceRoot":""}