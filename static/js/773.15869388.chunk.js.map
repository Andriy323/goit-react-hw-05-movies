{"version":3,"file":"static/js/773.15869388.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/components/page/CastPage/cast.module.css?806b","components/page/CastPage/Cast.jsx","components/shared/scrols.js","components/shared/shared.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"cast_list__-re0Y\",\"ani\":\"cast_ani__X8+Mc\",\"item\":\"cast_item__hhrDs\",\"pretitle\":\"cast_pretitle__cVtSG\",\"image\":\"cast_image__bQqUU\"};","import { useParams } from 'react-router-dom';\nimport { useState, useEffect, useRef } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { getFilmsCredits } from 'components/shared/shared';\nimport notImage from '../../image/noavatar.png';\nimport css from './cast.module.css';\nimport Loader from 'components/shared/Loader/Loader';\nimport { scrols } from 'components/shared/scrols';\n\nconst Cast = () => {\n  const [state, setState] = useState({\n    item: [],\n    loader: false,\n  });\n  const [scrol, setScrol] = useState(false);\n  const { movieId } = useParams();\n  const refStart = useRef(null);\n\n  useEffect(() => {\n    if (scrol) scrols(refStart);\n  }, [scrol]);\n\n  useEffect(() => {\n    const fetchFilmsCast = async () => {\n      try {\n        setState(prev => ({ ...prev, loader: true }));\n        const { cast } = await getFilmsCredits(movieId);\n        setState(prevState => {\n          return { prevState, item: [...cast] };\n        });\n        cast.length ? setScrol(true) : toast.warning(`No credits!`);\n      } catch (error) {\n        toast.error(\n          ` An error occurred. Go to the main page or repeat the request.`\n        );\n      } finally {\n        setState(prev => ({ ...prev, loader: false }));\n      }\n    };\n\n    fetchFilmsCast();\n  }, [movieId]);\n\n  // const buttonHandler = ref => {\n  //   ref.current.scrollIntoView({ block: 'start', behavior: 'smooth' });\n  // };\n\n  const items = state.item.map(({ name, character, profile_path }, index) => {\n    const urlImage = profile_path\n      ? `https://image.tmdb.org/t/p/w200/${profile_path}`\n      : notImage;\n    return (\n      <li key={index} className={css.item}>\n        <img src={urlImage} alt={name} width=\"120\" className={css.image} />\n        <p className={css.pretitle}>Name: {name}</p>\n        <p className={css.pretitle}>Character: {character}</p>\n      </li>\n    );\n  });\n  return (\n    <div ref={refStart}>\n      {state.loader && <Loader />}\n      <ToastContainer />\n      <ul className={css.list}>{items}</ul>\n    </div>\n  );\n};\n\nexport default Cast;\n","export const scrols = ref => {\n  ref.current.scrollIntoView({ block: 'start', behavior: 'smooth' });\n};\n","import axios from 'axios';\n\nconst { REACT_APP_API_KEY } = process.env;\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: {\n    api_key: REACT_APP_API_KEY,\n  },\n});\n\nexport const getTraidingFilms = async page => {\n  const { data } = await instance.get('/trending/movie/day', {\n    params:{\n      language: 'uk-UA'\n    }\n  });\n  return data;\n};\n\n\n\nexport const getFilmsSearch = async (query, page = 1) => {\n  const { data } = await instance.get(`/search/movie`, {\n    params: {\n      language: \"uk-UA\",\n      query,\n      page,\n    },\n  });\n\n  return data;\n};\n\nexport const getFilmsCredits = async id => {\n  const { data } = await instance.get(`/movie/${id}/credits`);\n  return data;\n};\n\nexport const getFilmsReviews = async id => {\n  const { data } = await instance.get(`/movie/${id}/reviews`);\n  return data;\n};\n\nconst getLang = async (id, lang, subUrl='') => {\n  const { data } = await instance.get(`/movie/${id}${subUrl}`, {\n    params: { language: lang, },\n  });\n\n  return data;\n};\n\nexport const getTrailerKey = async id => {\n  const ua = getLang(id, 'uk-UA', '/videos');\n  const ru = getLang(id, 'ru-Ru', '/videos');\n  const en = getLang(id, 'en-US', '/videos');\n  const promisTrailer = Promise.all([ua, ru, en])\n    .then(value => {\n      const data = value.find(({ results }) => results.length > 0);\n      return data ? data.results[0].key : '';\n    })\n    .catch(error => console.log(error, 'error'));\n\n  return promisTrailer;\n};\n\n\n// export const getFilmsId = async (id, lang = 'en-US') => {\n//   const { data } = await instance.get(`/movie/${id}`, {\n//     params: { language: lang },\n//   });\n\n//   return data;\n// };\n\nexport const getFilmDetails = async id => {\n  const uk = getLang(id, 'uk-UA');\n  const ru = getLang(id, 'ru-Ru');\n  const en = getLang(id, 'en-US');\n\n  const data = Promise.all([uk, ru, en])\n    .then(value => {\n      const valueLang = value.find(item => item.overview);\n      return valueLang;\n    })\n    .catch(error => console.log(error));\n  return data;\n};"],"names":["useState","item","loader","state","setState","scrol","setScrol","movieId","useParams","refStart","useRef","useEffect","scrols","fetchFilmsCast","prev","getFilmsCredits","cast","prevState","length","toast","items","map","index","name","character","profile_path","urlImage","notImage","className","css","src","alt","width","ref","Loader","current","scrollIntoView","block","behavior","instance","axios","baseURL","params","api_key","process","getTraidingFilms","page","get","language","data","getFilmsSearch","query","id","getFilmsReviews","getLang","lang","subUrl","getTrailerKey","ua","ru","en","promisTrailer","Promise","all","then","value","find","results","key","catch","error","console","log","getFilmDetails","uk","overview"],"sourceRoot":""}