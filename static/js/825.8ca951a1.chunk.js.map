{"version":3,"file":"static/js/825.8ca951a1.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/components/page/MoviesDetailsPage/movies-details.module.css?7465","components/page/MoviesDetailsPage/MovieDetails.jsx","components/shared/shared.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"movies-details_container__ZQ1+r\",\"containerImage\":\"movies-details_containerImage__z+JCT\",\"btnBack\":\"movies-details_btnBack__svJbg\",\"title\":\"movies-details_title__9ufsc\",\"image\":\"movies-details_image__VCMub\",\"item\":\"movies-details_item__tvVvF\",\"pretitle\":\"movies-details_pretitle__whvlN\",\"link\":\"movies-details_link__U2UJO\"};","import {\n  useParams,\n  Link,\n  useNavigate,\n  useLocation,\n  Outlet,\n} from 'react-router-dom';\nimport { useEffect, useState, memo } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport notImage from '../../image/notImage.jpg';\nimport { getFilmsId } from 'components/shared/shared';\nimport PropTypes from 'prop-types';\nimport css from './movies-details.module.css';\nimport Loader from 'components/shared/Loader/Loader';\nconst MovieDetails = () => {\n  const [state, setState] = useState({\n    item: {},\n    loader: false,\n  });\n  const navigate = useNavigate();\n  const location = useLocation();\n  const from = location.state?.from || '/movies';\n\n  const { movieId } = useParams();\n  useEffect(() => {\n    const fetchTraidingFilmsId = async () => {\n      try {\n        setState(prevLoader => ({ ...prevLoader, loader: true }));\n        const result = await getFilmsId(movieId);\n        setState(prevState => {\n          return { ...prevState, item: { ...result } };\n        });\n      } catch (error) {\n        toast.error(\n          ` An error occurred. Go to the main page or repeat the request.`\n        );\n      } finally {\n        setState(prevLoader => ({ ...prevLoader, loader: false }));\n      }\n    };\n    fetchTraidingFilmsId();\n  }, [movieId]);\n  const Back = () => {\n    navigate(from);\n  };\n  const { original_title, overview, poster_path, vote_average } = state.item;\n  const urlImage = poster_path\n    ? `https://image.tmdb.org/t/p/w500/${poster_path}`\n    : notImage;\n  return (\n    <>\n      <ToastContainer />\n      {state.loader && <Loader />}\n      <button className={css.btnBack} onClick={Back}>\n        {'<== Back'}\n      </button>\n      <div className={css.containerImage}>\n        <img\n          className={css.image}\n          src={urlImage}\n          alt={original_title}\n          width=\"450\"\n        />\n\n        <div>\n          <ul className={css.list}>\n            <li className={css.item}>\n              <h1 className={css.title}>{original_title}</h1>\n            </li>\n            <li className={css.item}>\n              <p className={css.pretitle}>{overview}</p>\n            </li>\n            <li className={css.item}>\n              <p className={css.pretitle}>\n                Rating: {Number(vote_average).toFixed(1)}\n              </p>\n            </li>\n          </ul>\n          <Link\n            className={css.link}\n            state={{ from }}\n            to={`/movies/${movieId}/cast`}\n          >\n            Cast\n          </Link>\n          <Link\n            className={css.link}\n            state={{ from }}\n            to={`/movies/${movieId}/reviews`}\n          >\n            Reviews\n          </Link>\n        </div>\n      </div>\n      <Outlet />\n    </>\n  );\n};\n\nexport default memo(MovieDetails);\n\nMovieDetails.propTypes = {\n  itemRevievs: PropTypes.array,\n  itemCast: PropTypes.array,\n};\n","import axios from 'axios';\n\nconst { REACT_APP_API_KEY } = process.env;\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: {\n    api_key: REACT_APP_API_KEY,\n  },\n});\n\nexport const getTraidingFilms = async page => {\n  const { data } = await instance.get('/trending/movie/day');\n  return data;\n};\n\nexport const getFilmsId = async id => {\n  const { data } = await instance.get(`/movie/${id}`);\n  return data;\n};\n\nexport const getFilmsSearch = async (query, page = 1) => {\n  const { data } = await instance.get(`/search/movie`, {\n    params: {\n      query,\n      page,\n    },\n  });\n\n  return data;\n};\n\nexport const getFilmsCredits = async id => {\n  const { data } = await instance.get(`/movie/${id}/credits`);\n  return data;\n};\n\nexport const getFilmsReviews = async id => {\n  const { data } = await instance.get(`/movie/${id}/reviews`);\n  return data;\n};\n"],"names":["MovieDetails","useState","item","loader","state","setState","navigate","useNavigate","from","useLocation","movieId","useParams","useEffect","fetchTraidingFilmsId","prevLoader","getFilmsId","result","prevState","toast","original_title","overview","poster_path","vote_average","urlImage","notImage","Loader","className","css","onClick","src","alt","width","Number","toFixed","to","memo","instance","axios","baseURL","params","api_key","process","getTraidingFilms","page","get","data","id","getFilmsSearch","query","getFilmsCredits","getFilmsReviews"],"sourceRoot":""}