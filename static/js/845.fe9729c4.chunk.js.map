{"version":3,"file":"static/js/845.fe9729c4.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/components/page/ReviewsPage/reviews.module.css?131b","components/page/ReviewsPage/Reviews.jsx","components/shared/scrols.js","components/shared/shared.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"reviews_list__zgFfV\",\"item\":\"reviews_item__yqVN2\",\"title\":\"reviews_title__r-jPj\",\"pretitle\":\"reviews_pretitle__6JtpS\"};","import { useParams } from 'react-router-dom';\nimport { useState, useEffect, useRef } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { getFilmsReviews } from 'components/shared/shared';\nimport css from './reviews.module.css';\nimport Loader from 'components/shared/Loader/Loader';\nimport { scrols } from 'components/shared/scrols';\nconst Reviews = () => {\n  const [state, setState] = useState({\n    data: [],\n    loader: false,\n  });\n  // const [scrol, setScrol] = useState(false);\n  const { movieId } = useParams();\n  const refStart = useRef(null);\n\n  // useEffect(() => {\n  //   if (scrol) {\n  //     scrols(refStart)\n  //   }\n  // }, [scrol]);\n\n\n\n  useEffect(() => {\n    const fetchFilmsRevievs = async () => {\n      try {\n        setState(prev => ({ ...prev, loader: true }));\n        const { results } = await getFilmsReviews(movieId);\n        setState(prevState => {\n          return { prevState, data: [...results] };\n        });\n        if (!results.length) {\n          toast.warning(`\nNo reviews!`);\n        } else {\n          scrols(refStart)\n\n          // setScrol(true);\n        }\n      } catch (error) {\n        toast.error(\n          ` An error occurred. Go to the main page or repeat the request.`\n        );\n      } finally {\n        setState(prev => ({ ...prev, loader: false }));\n      }\n    };\n    fetchFilmsRevievs();\n  }, [movieId]);\n\n\n\n  const item = state.data.map(({ content, author, created_at }, index) => (\n    <li className={css.item} key={index}>\n      <h2 className={css.title}>\n        Author: {author} created {new Date(created_at).toDateString()}{' '}\n      </h2>\n      <p className={css.pretitle}>{content}</p>\n    </li>\n  ));\n  return (\n    <div   ref={refStart}>\n      {state.loader && <Loader />}\n      <ToastContainer />\n      <ul className={css.list}>{item}</ul>\n    </div>\n  );\n};\n\nexport default Reviews;\n","export const scrols = ref => {\n  ref.current.scrollIntoView({ block: 'start', behavior: 'smooth' });\n};\n","import axios from 'axios';\n\nconst { REACT_APP_API_KEY } = process.env;\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: {\n    api_key: REACT_APP_API_KEY,\n  },\n});\n\nexport const getTraidingFilms = async page => {\n  const { data } = await instance.get('/trending/movie/day');\n  return data;\n};\n\nexport const getFilmsId = async id => {\n  const { data } = await instance.get(`/movie/${id}`);\n  return data;\n};\n\nexport const getFilmsSearch = async (query, page = 1) => {\n  const { data } = await instance.get(`/search/movie`, {\n    params: {\n      query,\n      page,\n    },\n  });\n\n  return data;\n};\n\nexport const getFilmsCredits = async id => {\n  const { data } = await instance.get(`/movie/${id}/credits`);\n  return data;\n};\n\nexport const getFilmsReviews = async id => {\n  const { data } = await instance.get(`/movie/${id}/reviews`);\n  return data;\n};\n\nconst getTrailerLang = async (id, lang) => {\n  const { data } = await instance.get(`/movie/${id}/videos`, {\n    params: { language: lang },\n  });\n\n  return data;\n};\n\nexport const getTrailerKey = async id => {\n  const lang = ['uk-UA', 'ru-Ru', 'en-US'];\n  let keyTrailer = '';\n  \n  for (let i = 0; i < lang.length; i++) {\n    const { results } = await getTrailerLang(id, lang[i]);\n    if (results.length) {\n      keyTrailer = results[0].key;\n      break;\n    }\n  }\n  return keyTrailer;\n};\n"],"names":["useState","data","loader","state","setState","movieId","useParams","refStart","useRef","useEffect","fetchFilmsRevievs","prev","getFilmsReviews","results","prevState","length","scrols","toast","item","map","index","content","author","created_at","className","css","Date","toDateString","ref","Loader","current","scrollIntoView","block","behavior","instance","axios","baseURL","params","api_key","process","getTraidingFilms","page","get","getFilmsId","id","getFilmsSearch","query","getFilmsCredits","getTrailerLang","lang","language","getTrailerKey","keyTrailer","i","key"],"sourceRoot":""}